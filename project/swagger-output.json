{
  "swagger": "2.0",
  "info": {
    "title": "TEST API",
    "description": "Description",
    "version": "1.0.0"
  },
  "host": "localhost:3001",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/connection": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/tele": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/stat": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/discooonection": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User Registration",
        "description": "Registers a new user with name, email, and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "tuuguu"
                },
                "email": {
                  "type": "string",
                  "example": "tudu@gmail.com"
                },
                "phoneNumber": {
                  "type": "number",
                  "example": 99881175
                },
                "password": {
                  "type": "string",
                  "example": "1234"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User login",
        "description": "Logs in a user with email and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "apoxmn@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "1234"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/refresh": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Refresh access token",
        "description": "Returns a new access token using the refresh token",
        "parameters": [
          {
            "name": "x-refresh-token",
            "in": "header",
            "description": "Refresh token (optional for Swagger testing)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/users/getuser": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user data",
        "description": "Returns user details from access token. Token is passed in the Authorization header.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer access token",
            "required": true,
            "type": "string",
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/otp/verify": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User login",
        "description": "Logs in a user with email and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "phoneNumber": {
                  "type": "number",
                  "example": 99881175
                },
                "code": {
                  "type": "string",
                  "example": "712329"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/otp/forgot_pass": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send OTP for password reset",
        "description": "Sends a 6-digit OTP",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "phoneNumber": {
                  "type": "number",
                  "example": 99881175
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/otp/verify_reset": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send OTP for password reset",
        "description": "Sends a 6-digit OTP to the user’s registered phone number for password reset.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "phoneNumber": {
                  "type": "number",
                  "example": 99881175
                },
                "code": {
                  "type": "string",
                  "example": "dsfsdfsd"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/otp/reset_password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send OTP for password reset",
        "description": "Sends a 6-digit OTP to the user’s registered phone number for password reset.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "phoneNumber": {
                  "type": "number",
                  "example": 99881175
                },
                "newPassword": {
                  "type": "string",
                  "example": "sdfsdfdf"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/mqtt/data": {
      "get": {
        "tags": [
          "MQTT"
        ],
        "summary": "Get Latest Temperature Data",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "example": " "
                },
                "entity": {
                  "type": "string",
                  "example": " "
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/mqtt/toggle": {
      "post": {
        "tags": [
          "MQTT"
        ],
        "summary": "Get Latest Temperature Data",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "example": " "
                },
                "entity": {
                  "type": "string",
                  "example": " "
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/mqtt/automation": {
      "post": {
        "tags": [
          "Automation"
        ],
        "summary": "Set ON/OFF automation times for a device",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "example": " "
                },
                "clientId": {
                  "type": "string",
                  "example": " "
                },
                "entity": {
                  "type": "string",
                  "example": " "
                },
                "onTime": {
                  "type": "string",
                  "example": " "
                },
                "offTime": {
                  "type": "string",
                  "example": " "
                },
                "timezone": {
                  "type": "string",
                  "example": "Asia/Ulaanbaatar"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/mqtt/update": {
      "put": {
        "tags": [
          "Update automation"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "ruleId": {
                  "type": "string",
                  "example": " "
                },
                "onTime": {
                  "type": "string",
                  "example": " "
                },
                "offTime": {
                  "type": "string",
                  "example": " "
                },
                "timezone": {
                  "type": "string",
                  "example": " "
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/mqtt/getRule": {
      "get": {
        "tags": [
          "Get automation"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "example": " "
                },
                "entity": {
                  "type": "string",
                  "example": " "
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/mqtt/delete": {
      "delete": {
        "tags": [
          "Delete automation"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/mqtt/powerlogs": {
      "get": {
        "tags": [
          "Power Logs"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "example": " "
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/mqtt/getAllDevices": {
      "get": {
        "tags": [
          "MQTT"
        ],
        "summary": "Get all currently connected devices",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/mqtt/connection": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/mqtt/tele": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/mqtt/teleKh": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/mqtt/stat": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/mqtt/discooonection": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/device/registerDevices": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Register a new device",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "example": "VIOT_0D2BEC"
                },
                "entity": {
                  "type": "string",
                  "example": "SI7021"
                },
                "type": {
                  "type": "string",
                  "example": "th"
                },
                "userId": {
                  "type": "string",
                  "example": "64fa5db7cda63fd35f7c321a"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/device/getUserId": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Get device details by deviceId",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "example": " "
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/device/deleteDevice": {
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "Unregister/delete a device",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "example": " "
                },
                "clientId": {
                  "type": "string",
                  "example": "VIOT_0D2BEC"
                },
                "entity": {
                  "type": "string",
                  "example": "SI7021"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  }
}